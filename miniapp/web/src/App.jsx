// App.jsx
import { useEffect, useState } from "react";
import { Outlet, Link, useLocation } from "react-router-dom";
import WebApp from "@twa-dev/sdk";
import axios from "axios";

const API = "https://my-ola-api.onrender.com";

export default function App() {
  const [status, setStatus] = useState("loading‚Ä¶");
  const [user, setUser] = useState(null);
  const [initData, setInitData] = useState("");
  const loc = useLocation();

  // App.jsx

useEffect(() => {
  const webApp = WebApp;
  webApp.ready();
  webApp.expand();

  // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –¥–∞—Ç—å SDK Telegram –≤—Ä–µ–º—è –Ω–∞ –ø–æ–ª–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é.
  // –≠—Ç–æ –¥–æ–ª–∂–Ω–æ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É "–≥–æ–Ω–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π".
  setTimeout(() => {
    const initData = webApp.initData;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∏–ª–∏ –ª–∏ –º—ã –≤–æ–æ–±—â–µ initData
    if (!initData) {
      setStatus("auth failed (initData is empty after 100ms)");
      return;
    }

    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∞—à –±—ç–∫–µ–Ω–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    setStatus("authorizing...");
    axios.get(`${API}/api/me`, { headers: { "X-Telegram-InitData": initData } })
      .then(r => {
        setUser(r.data.user);
        setStatus("ok");
      })
      .catch((err) => {
        // –í—ã–≤–æ–¥–∏–º –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        const errorDetail = err.response?.data?.detail || err.message;
        setStatus(`auth failed (API error: ${errorDetail})`);
      });

  }, 100); // 100 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –∑–∞–¥–µ—Ä–∂–∫–∏

}, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, —á—Ç–æ–±—ã —ç—Ç–æ—Ç –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è –æ–¥–∏–Ω —Ä–∞–∑

  return (
    <div style={{fontFamily:"system-ui", minHeight:"100vh", background:"#0f1115", color:"#e6e6e6"}}>
      <header style={{position:"sticky", top:0, zIndex:10, backdropFilter:"blur(8px)", background:"rgba(15,17,21,0.6)", borderBottom:"1px solid #222"}}>
        <nav style={{display:"flex", gap:12, alignItems:"center", padding:"10px 12px"}}>
          <strong style={{marginRight:"auto"}}>NU OLA</strong>
          <NavLink to="/" current={loc.pathname==="/"}>üè† –ì–æ–ª–æ–≤–Ω–∞</NavLink>
          <NavLink to="/profile" current={loc.pathname==="/profile"}>üë§ –ü—Ä–æ—Ñ—ñ–ª—å</NavLink>
          <NavLink to="/schedule" current={loc.pathname==="/schedule"}>üìÖ –†–æ–∑–∫–ª–∞–¥</NavLink>
        </nav>
      </header>

      <main style={{padding:"14px"}}>
        <small style={{opacity:0.7}}>Status: {status}</small>
        {/* –ø–µ—Ä–µ–¥–∞—ë–º initData, —á—Ç–æ–±—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–æ–≥–ª–∏ —Å—Ç—É—á–∞—Ç—å—Å—è –≤ API */}
        <Outlet context={{ API, user, status, initData }} />
      </main>
    </div>
  );
}

function NavLink({to, current, children}) {
  return (
    <Link to={to} style={{
      padding:"8px 10px",
      borderRadius:10,
      textDecoration:"none",
      color:"#e6e6e6",
      background: current ? "linear-gradient(90deg,#5b8cff22,#5b8cff11)" : "transparent",
      border: current ? "1px solid #2a3b66" : "1px solid transparent"
    }}>{children}</Link>
  );
}
